import socket

# Define common vulnerabilities for demonstration purposes
VULNERABILITY_DATABASE = {
    21: "FTP - Default login credentials",
    22: "SSH - Weak or default passwords",
    23: "Telnet - Unencrypted communication",
    80: "HTTP - Open web server or outdated software",
    443: "HTTPS - SSL vulnerabilities (e.g., outdated protocols)",
    3306: "MySQL - Weak database passwords",
}

def scan_target(host, ports):
    """Scans specified ports on the given host."""
    print(f"Scanning {host} for vulnerabilities...\n")
    for port in ports:
        try:
            # Create a socket
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)  # Timeout for the connection attempt
            
            # Try to connect to the port
            result = sock.connect_ex((host, port))
            if result == 0:  # Port is open
                print(f"Port {port} is open!")
                if port in VULNERABILITY_DATABASE:
                    print(f"Possible vulnerability: {VULNERABILITY_DATABASE[port]}")
                else:
                    print("No known vulnerabilities detected for this port.")
            sock.close()
        except Exception as e:
            print(f"Error scanning port {port}: {e}")

def run():
    """Main function for the Vulnerability Scanner."""
    print("Vulnerability Scanner")
    print("=====================")
    target = input("Enter the target hostname or IP: ")
    ports = input("Enter the ports to scan (comma-separated): ")

    try:
        # Resolve target hostname to IP
        target_ip = socket.gethostbyname(target)
        ports = [int(p.strip()) for p in ports.split(",")]

        # Perform the scan
        scan_target(target_ip, ports)
    except ValueError:
        print("Error: Please enter valid port numbers.")
    except socket.gaierror:
        print("Error: Unable to resolve the target hostname.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
